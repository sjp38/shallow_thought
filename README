Shallow Thought
===============

A CLI tool for simple and safe managements of shallow thoughts.


Key Features
------------

- Git-based powerful history management.
- Proactive remote synchronizations.
- Filesystem based flexible thoughts import/export/modification.


Getting Started
===============

Initialization
--------------

Place this directory on your machine.

    $ git clone https://github.com/sjp38/shallow_thought

Now the tool can be used by executing `st` in the cloned directory.  For
brevity, let's assume you set ``$PATH`` to point the directory.

Make a remote blank git repo somewhere (e.g., gitlab or github).  Let's
assume you set your blank git repo at ``https://github.com/foo/my_thoughts``.
Then, make a directory that will be used as a local storage of your thoughts.

    $ mkdir my_thoughts

Move to your local storage and initialize the local storage to follow the
remote repo.  Your thoughts will be automatically backed up on the remote repo.

    $ cd my_thoughts
    $ st init https://github.com/foo/my_thoughts

The basic usage of this tool is:

    $ st <subcommand> [options]

In the above example command, 'init' is the subcommand and
'https://github.com/foo/my_thoughts' is the option.


Save Thoughts
-------------

``new`` subcommand receives your thought as string.  Then, it will pull the
thoughts in the remote storage (``https://github.com/foo/my_thoughts`` in this
example) on your local storage, save your thought on it and push to the remote
storage.

    $ st new "Let it go."


Show Thoughts
-------------

``show`` subcommand lists your past thoughts that you saved via this tool on
the local storage.

    $ st show

By giving ``--random`` option, you can randomly pick a thought to show.

    $ st show --random


Remove Thoughts
---------------

``remove`` subcommand removes one or more latest thoughts you wish to remove.
Note that removal will be also applied on your remote storage.

    $ st remove <number of latest thoughts to remove>

If you don't provide the ``<number of latest thoughts to remove>``, it will
remove only one latest thought.


Export Thoughts
---------------

``export`` subcommand stores each of your thoughts in a text file.

    $ st export <export dir>

The command receives directory to store the thoughts as an argument.  The files
will have the date of the thought as a prefix of their name.


Import Thoughts
---------------

``import`` subcommand imports thoughts exported by ``export`` subcommand.

    $ st import <thought> ...

The command receives the thoughts to be imported.  Whole thoughts will be
sorted by their date after the importing.
